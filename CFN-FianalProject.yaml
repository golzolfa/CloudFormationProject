
AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create a VPC, subnets, security groups, ASG, ALB, S3, IAM roles and RDS

Metadata:
  author: Golnaz Zolfaghari
  creation_date: '2024-05-26'
  unique_id: 12345-abcde-67890-fghij


Parameters:
  bucketName:
    Type: String
    Default: "golnazfinalexambucket"
    Description: "Enter Your S3 Bucket"


  vpcCIDR:
    Type: String
    Default: "10.0.0.0/16"
    Description: "Enter Your VPC CIDR"


  subnet1CIDR:
    Type: String
    Default: '10.0.1.0/24'
    Description: "Enter Your Subnet1 CIDR"


  subnet2CIDR:
    Type: String
    Default: '10.0.2.0/24'
    Description: "Enter Your Subnet2 CIDR"


  az1:
    Type: String
    Default: 'us-west-2a'
    Description: "Enter Your AZ-1 ID"


  az2:
    Type: String
    Default: 'us-west-2b'
    Description: "Enter Your AZ-2 ID"


  dbPort:
    Type: Number
    Default: 3306
    Description: "Enter Your Database Port Number"


  amiID:
    Type: String
    Default: 'ami-059df5c7bfaeaff1d'
    Description: "Enter Your EC2 AMI ID"


  InstanceTypeParameter:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m1.small
      - m1.large
      - t3.micro
    Description: Enter t2.micro, m1.small, or m1.large. Default is t2.micro.


  EC2KeyPair:
    Type: AWS::EC2::KeyPair::KeyName
    Default : "golnaz-keypair"


  DBInstanceID:
    Type: String
    Default: 'MyAppDBInstance'
    Description: "Enter Your RDS Instance Name"


  DBName:
    Type: String
    Default: 'MyAppDatabase'
    Description: "Enter Your RDS DB Name"


  DBInstanceClass:
    Type: String
    Default: db.t3.micro
    Description: "Enter Your RDS Instance Class"


  DBAllocatedStorage:
    Default: '20'
    Description: The size of the database (GiB)
    Type: Number
    MinValue: '20'
    MaxValue: '65536'
    ConstraintDescription: must be between 20 and 65536 GiB.


  DBEngine:
    Type: String
    Default: 'MySQL'
    Description: Enter Your RDS DB Engine Type


  EngineVersion:
    Type: String
    Default: '8.0.33'
    Description: Enter Your RDS DB Engine Version


  DBUsername:
    NoEcho: 'true'
    Description: Username for MySQL database access
    Default: 'golzolfa'
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.


  DBPassword:
    NoEcho: 'true'
    Description: Password MySQL database access
    Default: 'Metroc1234'
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.


Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref vpcCIDR
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: stack
          Value: production


  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref subnet1CIDR
      AvailabilityZone: !Ref az1
      MapPublicIpOnLaunch: true
      Tags:
        - Key: stack
          Value: production


  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref subnet2CIDR
      AvailabilityZone: !Ref az2
      MapPublicIpOnLaunch: true
      Tags:
        - Key: stack
          Value: production


  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: stack
          Value: production
  

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway


  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: stack
          Value: production


  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway


  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client host
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: "-1"
          CidrIp: 0.0.0.0/0


  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to ALB
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: "-1"
          CidrIp: 0.0.0.0/0


  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow DB Connection to RDS
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref dbPort
          ToPort: !Ref dbPort
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: "-1"
          CidrIp: 0.0.0.0/0


  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Ref amiID
      InstanceType: !Ref InstanceTypeParameter
      SecurityGroups:
        - !Ref EC2SecurityGroup
      KeyName: !Ref EC2KeyPair


  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      LaunchConfigurationName: !Ref LaunchConfiguration
      MinSize: 2
      MaxSize: 5
      DesiredCapacity: 2
      Tags:
        - Key: Name
          Value: AutoScalingInstance
          PropagateAtLaunch: 'true'


  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: myTargetGroup
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VPC
      HealthCheckProtocol: HTTP
      HealthCheckPort: '80'
      HealthCheckPath: /
      TargetType: instance


  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: myALB
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      SecurityGroups:
        - !Ref ALBSecurityGroup
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '60'


  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref bucketName
      VersioningConfiguration:
        Status: Enabled


  IAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: S3FullAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: s3:*
                Resource: "*"


  DBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: !Ref DBInstanceID
      AllocatedStorage: !Ref DBAllocatedStorage
      DBInstanceClass: !Ref DBInstanceClass
      Engine: !Ref DBEngine
      EngineVersion: !Ref EngineVersion
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      DBName: !Ref DBName
      VPCSecurityGroups:
        - !Ref RDSSecurityGroup
      DBSubnetGroupName: !Ref DBSubnetGroup
      PubliclyAccessible: true
      BackupRetentionPeriod: 7
      MultiAZ: false


  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets for RDS DB Instance
      SubnetIds:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2


Outputs:
  VPCId:
    Description: VPC ID
    Value: !Ref VPC


  PublicSubnet1:
    Description: Public Subnet 1 ID
    Value: !Ref PublicSubnet1


  PublicSubnet2:
    Description: Public Subnet 2 ID
    Value: !Ref PublicSubnet2


  ALBArn:
    Description: Application Load Balancer ARN
    Value: !GetAtt ALB.LoadBalancerArn


  ALBDNSName:
    Description: Application Load Balancer DNS Name.
    Value: !GetAtt ALB.DNSName


  AutoScalingGroup:
    Description: Auto Scaling Group Name.
    Value: !Ref AutoScalingGroup


  DBInstanceEndpoint:
    Description: The connection endpoint for the RDS DB instance.
    Value: !GetAtt DBInstance.Endpoint.Address
